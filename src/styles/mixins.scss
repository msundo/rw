@mixin mobile {
    @media (min-width: $screen-xs) {
        @content;
    }
}

@mixin tablet {
    @media (min-width: $screen-sm) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: $screen-md) {
        @content;
    }
}

@mixin large-desktop {
    @media (min-width: $screen-lg) {
        @content;
    }
}


@mixin mobile-max {
    @media (max-width: $screen-xs - 1) {
        @content;
    }
}

@mixin tablet-max {
    @media (max-width: $screen-sm - 1) {
        @content;
    }
}

@mixin desktop-max {
    @media (max-width: $screen-md - 1) {
        @content;
    }
}

@mixin large-desktop-max {
    @media (max-width: $screen-lg - 1) {
        @content;
    }
}

@function calculateRem($size) {
    $remSize: $size / $font-size;
    @return #{$remSize}rem;
}

@function svg-url($svg) {
    @if not str-index($svg, xmlns) {
        $svg: str-replace($svg, '<svg', '<svg xmlns="http://www.w3.org/2000/svg"');
    }

    $encoded: '';
    $slice: 2000;
    $index: 0;
    $loops: ceil(str-length($svg)/$slice);

    @for $i from 1 through $loops {
        $chunk: str-slice($svg, $index, $index + $slice - 1);
        $chunk: str-replace($chunk, '"', '\'');
        $chunk: str-replace($chunk, '%', '%25');
        $chunk: str-replace($chunk, '&', '%26');
        $chunk: str-replace($chunk, '#', '%23');
        $chunk: str-replace($chunk, '{', '%7B');
        $chunk: str-replace($chunk, '}', '%7D');
        $chunk: str-replace($chunk, '<', '%3C');
        $chunk: str-replace($chunk, '>', '%3E');
        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice;
    }

    @return url("data:image/svg+xml,#{$encoded}");
}

@mixin background-svg($svg) {
    background-image: svg-url($svg);
}

@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @return if($index, str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace), $string);
}